version: 2.1

orbs:
    aws-s3: circleci/aws-s3@1.0.11

jobs:
    build:
        docker:
            - image: circleci/node:10
              environment:
                NODE_ENV: test
        steps:
            - checkout
            - run:
                name: "Install dependencies"
                command: yarn
            - run:
                name: "Style check"
                command: yarn lint
            - run:
                name: "Run tests"
                command: yarn test --passWithNoTests
    deploy:
        docker:
            - image: circleci/node:10
              environment:
                NODE_ENV: prod
                API_URL: https://api.kdti.dev/api/
        steps:
            - checkout
            - run:
                name: "Install serverless"
                command: sudo npm i -g serverless
            - run:
                name: "Install dependencies"
                command: yarn
            - run:
                name: "Build"
                command: yarn build
            - run:
                name: "Serverless deploy"
                command: serverless deploy --stage prod
#            - aws-s3/sync:
#                from: 'public/bundles'
#                to: 's3://kdti-statics/bundles'
#                arguments: |
#                  --acl public-read \
#                  --cache-control "max-age=86400" \
#                  --delete
#                overwrite: true
    deploy-staging:
        docker:
            - image: circleci/node:10
              environment:
                NODE_ENV: staging
                API_URL: https://staging.kdti.dev/api/
        steps:
            - checkout
            - run:
                name: "Install serverless"
                command: sudo npm i -g serverless
            - run:
                name: "Install dependencies"
                command: yarn
            - run:
                name: "Build"
                command: yarn build
            - run:
                name: "Serverless deploy"
                command: serverless deploy --stage staging

workflows:
  version: 2.1
  build-test-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only: staging
